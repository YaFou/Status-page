name: Continuous integration
on: [ push, pull_request ]
env:
    APP_ENV: test

jobs:
    test:
        name: Test (PHP ${{ matrix.php-version }} - dependencies ${{ matrix.dependencies }})
        runs-on: ubuntu-latest

        strategy:
            matrix:
                php-version: [ '7.2', '7.3', '7.4' ]
                dependencies: [ lowest, highest ]
            fail-fast: false

        steps:
            -   name: Checkout
                uses: actions/checkout@v2
            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php-version }}
                    coverage: xdebug
            -   name: Install dependencies (lowest)
                if: matrix.dependencies == 'lowest' && matrix.php-version != '8.0'
                run: composer update --prefer-lowest --no-scripts
            -   name: Install dependencies (highest)
                if: matrix.dependencies == 'highest' && matrix.php-version != '8.0'
                run: composer update --prefer-stable --no-scripts
#            -   name: Install dependencies (lowest - PHP 8.0)
#                if: matrix.dependencies == 'lowest' && matrix.php-version == '8.0'
#                run: composer update --prefer-lowest --no-scripts --ignore-platform-req=php
#            -   name: Install dependencies (highest - PHP 8.0)
#                if: matrix.dependencies == 'highest' && matrix.php-version == '8.0'
#                run: composer update --prefer-stable --no-scripts --ignore-platform-req=php
            -   name: Intialize Symfony
                run: |
                    php bin/console cache:clear
                    php bin/console assets:install public
            -   name: Setup database
                run: |
                    php bin/console doctrine:database:create
                    php bin/console doctrine:migrations:migrate --no-interaction --allow-no-migration
                    php bin/console doctrine:fixtures:load --no-interaction
            -   name: Setup problem matchers for PHP
                run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"
            -   name: Setup problem matchers for PHPUnit
                run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"
            -   name: Run tests
                run: php bin/phpunit --coverage-text

    test-database-mysql:
        name: Test (database MySQL - PHP ${{ matrix.php-version }} - dependencies ${{ matrix.dependencies }})
        needs: [ test ]
        runs-on: ubuntu-latest

        strategy:
            matrix:
                php-version: [ '7.2', '7.3', '7.4' ]
                dependencies: [ lowest, highest ]
            fail-fast: false

        services:
            mysql:
                image: mysql:5.7
                env:
                    MYSQL_ROOT_PASSWORD: root
                options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
                ports:
                    - 3306:3306

        env:
            DATABASE_URL: mysql://root:root@127.0.0.1:3306/database?serverVersion=5.7

        steps:
            -   name: Checkout
                uses: actions/checkout@v2
            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php-version }}
            -   name: Install dependencies (lowest)
                if: matrix.dependencies == 'lowest' && matrix.php-version != '8.0'
                run: composer update --prefer-lowest --no-scripts
            -   name: Install dependencies (highest)
                if: matrix.dependencies == 'highest' && matrix.php-version != '8.0'
                run: composer update --prefer-stable --no-scripts
#            -   name: Install dependencies (lowest - PHP 8.0)
#                if: matrix.dependencies == 'lowest' && matrix.php-version == '8.0'
#                run: composer update --prefer-lowest --no-scripts --ignore-platform-req=php
#            -   name: Install dependencies (highest - PHP 8.0)
#                if: matrix.dependencies == 'highest' && matrix.php-version == '8.0'
#                run: composer update --prefer-stable --no-scripts --ignore-platform-req=php
            -   name: Intialize Symfony
                run: |
                    php bin/console cache:clear
                    php bin/console assets:install public
            -   name: Setup database
                run: |
                    php bin/console doctrine:database:create
                    php bin/console doctrine:migrations:migrate --no-interaction --allow-no-migration
                    php bin/console doctrine:fixtures:load --no-interaction
            -   name: Setup problem matchers for PHP
                run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"
            -   name: Setup problem matchers for PHPUnit
                run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"
            -   name: Run tests
                run: php bin/phpunit --group=integration

    test-database-postgres:
        name: Test (database Postgres - PHP ${{ matrix.php-version }} - dependencies ${{ matrix.dependencies }})
        needs: [ test ]
        runs-on: ubuntu-latest

        strategy:
            matrix:
                php-version: [ '7.2', '7.3', '7.4' ]
                dependencies: [ lowest, highest ]
            fail-fast: false

        services:
            prostgres:
                image: postgres:13.0
                env:
                    POSTGRES_USER: root
                    POSTGRES_PASSWORD: root
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
                ports:
                    - 5432:5432

        env:
            DATABASE_URL: postgresql://root:root@127.0.0.1:5432/database?serverVersion=13&charset=utf8

        steps:
            -   name: Checkout
                uses: actions/checkout@v2
            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php-version }}
            -   name: Install dependencies (lowest)
                if: matrix.dependencies == 'lowest' && matrix.php-version != '8.0'
                run: composer update --prefer-lowest --no-scripts
            -   name: Install dependencies (highest)
                if: matrix.dependencies == 'highest' && matrix.php-version != '8.0'
                run: composer update --prefer-stable --no-scripts
#            -   name: Install dependencies (lowest - PHP 8.0)
#                if: matrix.dependencies == 'lowest' && matrix.php-version == '8.0'
#                run: composer update --prefer-lowest --no-scripts --ignore-platform-req=php
#            -   name: Install dependencies (highest - PHP 8.0)
#                if: matrix.dependencies == 'highest' && matrix.php-version == '8.0'
#                run: composer update --prefer-stable --no-scripts --ignore-platform-req=php
            -   name: Intialize Symfony
                run: |
                    php bin/console cache:clear
                    php bin/console assets:install public
            -   name: Setup database
                run: |
                    php bin/console doctrine:database:create
                    php bin/console doctrine:migrations:migrate --no-interaction --allow-no-migration
                    php bin/console doctrine:fixtures:load --no-interaction
            -   name: Setup problem matchers for PHP
                run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"
            -   name: Setup problem matchers for PHPUnit
                run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"
            -   name: Run tests
                run: php bin/phpunit --group=integration

    lint:
        name: Lint
        runs-on: ubuntu-latest

        steps:
            -   name: Checkout
                uses: actions/checkout@v2
            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: 7.4
            -   name: Install dependencies
                run: composer update
            -   name: Lint PHP
                run: php vendor/bin/phpcs
            -   name: Lint container
                run: php bin/console lint:container
            -   name: Lint Twig
                run: php bin/console lint:twig templates
            -   name: Lint YAML
                run: php bin/console lint:yaml config translations
